(import [java.net URLEncoder])
(URLEncoder/encode http://stackoverflow.com/questions/3644125/clojure-building-of-url-from-constituent-parts)
(URLEncoder/encode "http://stackoverflow.com/questions/3644125/clojure-building-of-url-from-constituent-parts")
(:require [monger.collection :as mc])
(require [monger.collection
(require [monger.collection])
(import [monger.collection find])
(require '[monger.collection :as mc])
(mv/find "test")
(mc/find "test")
(mc/find-mapts "test")
(mc/find-maps "test")
(count (mc/find-maps "test"))
(mc/find-maps "test" (sort [:_id]))
(mc/find "test" (sort [:_id]))
(mc/with-collection "test" (sort [:_id]))
(mc/find "test" {:limit 3})
(mc/find-mapts "test" {:limit 3})
(mc/find-maps "test" {:limit 3})
(mc/find-maps "test")
(mc/find-maps "test" [:limit 1])
(mc/find "test" [:limit 1])
(mc/find-maps "test" {:limit 1})
(mc/find "test" {:limit 1})
(mc/find "test" {:sort _id})
(mc/find "test" {:sort "_id"})
(mc/find-maps "test" {:sort "_id"})
(require '[monger.query])
(with-collection "test" (find {}))
(require '[monger.query :as q])
(q/with-collection "test" (find {}))
